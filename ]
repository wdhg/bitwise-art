use image::ImageBuffer;
use rand::rngs::SmallRng;
use rand::{Rng, SeedableRng};

// assuming 0.0 <= value <= 1.0
fn brightness(value: f64) -> u8 {
    (value * 255f64) as u8
}

fn rnd(func: fn(u64, u64) -> u64, x: u64, y: u64) -> u8 {
    brightness(SmallRng::seed_from_u64(func(x, y)).gen())
}

fn main() {
    let func = |x: u64, y: u64| -> u64 { x & y };
    ImageBuffer::from_fn(256, 256, |x, y| {
        image::Luma([rnd(func, x as u64, y as u64)])
    })
    .save("out.png")
    .unwrap();
}
